name: OSRT CI

on: [push, pull_request]



jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
          fail-fast: false
          matrix:
            os: [ubuntu-22.04, ubuntu-24.04, macos-12, macos-13, macos-14]
            python-minor-version: [9, 10, 11, 12]

        steps:
          # Checkout the repo
          - name: Checkout the repo
            uses: actions/checkout@v3
          # Install Python 3.9+
          - name: Install required development tools - Python 3.${{ matrix.python-minor-version }}
            uses: actions/setup-python@v4
            with:
                python-version: '3.${{ matrix.python-minor-version }}'
          - name: Verify the Python version
            run: |
                python3 -c "import sys; exit(not (sys.version_info.major == 3 and sys.version_info.minor == ${{ matrix.python-minor-version }}))"
          
          # Install required development tools: CMake
          - name: Install required development tools - cmake (macos)
            if: ${{ startsWith(matrix.os, 'windows') }}
            run: |
                winget install Kitware.CMake

          - name: Setup MSVC
            if: startsWith(matrix.os, 'windows')
            uses: ilammy/msvc-dev-cmd@v1
            with:
              arch: x64
          
          # Install required development tools: Ninja
          - name: Install required development tools - Ninja (Ubuntu)
            if: startsWith(matrix.os, 'ubuntu')
            run: |
                sudo apt install -y ninja-build
          - name: Install required development tools - Ninja (macOS)
            if: startsWith(matrix.os, 'macos')
            run: |
                brew install ninja
          - name: Install required development tools - Ninja (Windows)
            if: startsWith(matrix.os, 'windows')
            run: |
                choco install -y ninja --version=1.11.1

          # Install required development tools: pkg-config
          - name: Install required development tools - pkg-config (Ubuntu)
            if: startsWith(matrix.os, 'ubuntu')
            run: |
                sudo apt install -y pkg-config
          - name: Install required development tools - pkg-config (Macos)
            if: startsWith(matrix.os, 'macos')
            run: |
                brew install pkg-config
          - name: Install required development tools - pkg-config (Windows)
            if: startsWith(matrix.os, 'windows')
            run: |
                choco install -y pkgconfiglite
          
          # Install required development tools: scikit-build
          - name: Install required development tools - scikit-build
            run: |
                pip3 install --upgrade scikit-build


          # Install required development tools: Wheel Fixer
          - name: Install required development tools - Wheel Fixer (Ubuntu)
            if: startsWith(matrix.os, 'ubuntu')
            run: |
                pip3 install --upgrade auditwheel
                sudo apt install -y patchelf
          - name: Install required development tools - Wheel Fixer (macOS)
            if: startsWith(matrix.os, 'macos')
            run: |
                pip3 install --upgrade delocate
          - name: Install required development tools - Wheel Fixer (Windows)
            if: startsWith(matrix.os, 'windows')
            run: |
                pip3 install --upgrade delvewheel
          
          # Install required 3rd-party libraries
          - name: Install required 3rd-party libraries (Ubuntu)
            if: startsWith(matrix.os, 'ubuntu')
            run: |
                sudo apt install -y libtbb-dev
                sudo apt install -y libgmp-dev
          - name: Install required 3rd-party libraries (macOS)
            if: startsWith(matrix.os, 'macos')
            run: |
                brew install tbb
                brew install gmp
          - name: Install required 3rd-party libraries (Windows)
            if: startsWith(matrix.os, 'windows')
            run: |
                vcpkg install tbb:x64-windows
                vcpkg install gmp:x64-windows

          - name: Configure CMake
            if: startsWith(matrix.os, 'windows')
            run: cmake -G "Visual Studio 17 2022" -A x64 .
            
          - name: Build the project
            run: |
                python3 build.py
          
          # Run the sample experiment
          - name: Install the OSRT Python module and run the sample experiment (Python 3.9 - 3.11)
            if: matrix.python-minor-version != 12
            run: |
                python3 -c "import sys; exit(not (sys.version_info.major == 3 and sys.version_info.minor == ${{ matrix.python-minor-version }}))"
                pip3 install attrs packaging editables pandas scikit-learn sortedcontainers gmpy2 matplotlib
                python3 -c "import os; import subprocess; exit(subprocess.run(['pip3', 'install', 'dist/{}'.format(os.listdir('dist')[0])]).returncode)"
                python3 osrt/example.py
          - name: Install the OSRT Python module and run the sample experiment (Python 3.12)
            if: matrix.python-minor-version == 12
            run: |
                python3 -c "import sys; exit(not (sys.version_info.major == 3 and sys.version_info.minor == ${{ matrix.python-minor-version }}))"
                pip3 install attrs packaging editables pandas scikit-learn sortedcontainers gmpy2==2.2.0a1 matplotlib
                python3 -c "import os; import subprocess; exit(subprocess.run(['pip3', 'install', 'dist/{}'.format(os.listdir('dist')[0])]).returncode)"
                python3 osrt/example.py